// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Subscription {
  userId                 String    @unique
  stripeCustomerId       String    @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  @@id([userId, stripeCustomerId])
}

model List {
  id          String  @id @default(cuid())
  title       String
  slug        String? @unique
  description String
  public      Boolean @default(true)
  shares      Int     @default(0)
  userId      String
  links       Link[]

  @@index([userId])
}

model Link {
  id          String  @id @default(cuid())
  title       String?
  url         String
  description String?
  order       Int     @default(0)
  type        OgType  @default(WEBSITE)
  list        List?   @relation(fields: [listId], references: [id])
  listId      String?
  userId      String

  @@index([listId])
}

enum OgType {
  WEBSITE
  ARTICLE
  BLOG
  BOOK
  MUSIC_SONG
  MUSIC_ALBUM
  MUSIC_PLAYLIST
  MUSIC_RADIO_STATION
  VIDEO_MOVIE
  VIDEO_EPISODE
  VIDEO_TV_SHOW
  VIDEO_OTHER
  BUSINESS_BUSINESS
  PLACE
  PRODUCT
  PRODUCT_GROUP
  PRODUCT_ITEM
  PROFILE
  FITNESS_COURSE
  GAME_ACHIEVEMENT
  NFT
}
