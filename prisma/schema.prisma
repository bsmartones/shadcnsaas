// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(cuid())
  userId        String    @unique
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  @@map(name: "users")
}

model List {
  id          String   @id @default(cuid())
  userId      String
  orgId       String?
  title       String?
  description String?
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")

  items      Item[]
  views      Int     @default(0)
  isPublic   Boolean @default(true) @map(name: "is_public")
  isArchived Boolean @default(false) @map(name: "is_archived")

  @@index([userId])
  @@map(name: "lists")
}

model Item {
  id          String   @id @default(cuid())
  title       String
  description String?  @db.Text
  type        OgType   @default(WEBSITE)
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")

  order  Int
  listId String
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  url           String
  originalTitle String?
  fallbackTitle String?
  originalImage String?
  originalDesc  String?

  @@index([listId])
  @@map(name: "items")
}

enum OgType {
  WEBSITE
  ARTICLE
  BLOG
  BOOK
  MUSIC_SONG
  MUSIC_ALBUM
  MUSIC_PLAYLIST
  MUSIC_RADIO_STATION
  VIDEO_MOVIE
  VIDEO_EPISODE
  VIDEO_TV_SHOW
  VIDEO_OTHER
  BUSINESS_BUSINESS
  PLACE
  PRODUCT
  PRODUCT_GROUP
  PRODUCT_ITEM
  PROFILE
  FITNESS_COURSE
  GAME_ACHIEVEMENT
}

model AuditLog {
  id         String      @id @default(uuid())
  orgId      String
  action     ACTION
  entityId   String
  entityType ENTITY_TYPE
  userId     String
  userImage  String      @db.Text
  userName   String      @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  LIST
  ITEM
}
